#!/bin/bash

if [ "$EUID" != "0" ]; then
  echo "You must be root to run this script."
  exit 1
fi

SCRIPT_NAME="rftest2"
LXCDIR=/var/lib/lxc
MONGODB_CONF=/etc/mongodb.conf
MONGODB_PORT=27017
CONTROLLER_PORT=6633
CONTROLLER_IP=10.1.1.2
RF_HOME=..
export PATH=$PATH:/usr/local/bin:/usr/local/sbin
export PYTHONPATH=$PYTHONPATH:$RF_HOME

cd $RF_HOME

wait_port_listen() {
    port=$1
    while ! `nc -z localhost $port` ; do
        echo -n .
        sleep 1
    done
}

echo_bold() {
    echo -e "\033[1m${1}\033[0m"
}

kill_process_tree() {
    top=$1
    pid=$2

    children=`ps -o pid --no-headers --ppid ${pid}`

    for child in $children
    do
        kill_process_tree 0 $child
    done

    if [ $top -eq 0 ]; then
        kill -9 $pid &> /dev/null
    fi
}

reset() {
    init=$1;
    if [ $init -eq 1 ]; then
        echo_bold "-> Starting $SCRIPT_NAME";
    else
        echo_bold "-> Stopping child processes...";
        kill_process_tree 1 $$
    fi

    ovs-vsctl del-br switchA &> /dev/null;
    ovs-vsctl del-br switchB &> /dev/null;
    ovs-vsctl del-br switchC &> /dev/null;
    ovs-vsctl del-br switchD &> /dev/null;
    ovs-vsctl emer-reset &> /dev/null;

	lxc-shutdown -n h1;
	lxc-shutdown -n h2;
	lxc-shutdown -n h3;
	lxc-shutdown -n h4;

	lxc-stop -n h1;
	lxc-stop -n h2;
	lxc-stop -n h3;
	lxc-stop -n h4;

}
reset 1
trap "reset 0; exit 0" INT

echo_bold "-> Setting up the management bridge (lxcbr0)..."
ifconfig lxcbr0 192.169.1.2 up

echo_bold "-> Configuring the virtual machines..."
echo_bold "-> Starting the virtual machines..."

lxc-start -n h1 -d
lxc-start -n h2 -d
lxc-start -n h3 -d
lxc-start -n h4 -d


sleep 10

echo "Adding switches"
ovs-vsctl add-br switchA
ovs-vsctl add-br switchB
ovs-vsctl add-br switchC
ovs-vsctl add-br switchD


echo "Adding h[1-4] to switches"
ovs-vsctl add-port switchA h1.0
ovs-vsctl add-port switchB h2.0
ovs-vsctl add-port switchC h3.0
ovs-vsctl add-port switchD h4.0


echo "creating links"
ip link add name sa.2 type veth peer name sb.2
ip link add name sb.3 type veth peer name sd.2
ip link add name sc.2 type veth peer name sd.3
ip link add name sa.3 type veth peer name sc.3
ip link add name sa.4 type veth peer name sd.4


echo "set links up"
ifconfig sa.2 up
ifconfig sa.3 up
ifconfig sa.4 up
ifconfig sb.2 up
ifconfig sb.3 up
ifconfig sc.2 up
ifconfig sc.3 up
ifconfig sd.2 up
ifconfig sd.3 up
ifconfig sd.4 up

echo "adding links to switches"
ovs-vsctl add-port switchA sa.2
ovs-vsctl add-port switchA sa.3
ovs-vsctl add-port switchA sa.4

ovs-vsctl add-port switchB sb.2
ovs-vsctl add-port switchB sb.3

ovs-vsctl add-port switchC sc.2
ovs-vsctl add-port switchC sc.3

ovs-vsctl add-port switchD sd.2
ovs-vsctl add-port switchD sd.3
ovs-vsctl add-port switchD sd.4

ip address add 172.31.1.1/24 brd + dev h1.0
ip address add 172.31.2.1/24 brd + dev h2.0
ip address add 172.31.3.1/24 brd + dev h3.0
ip address add 172.31.4.1/24 brd + dev h4.0


ip address add 10.0.0.1/24 brd + dev sa.2
ip address add 30.0.0.1/24 brd + dev sa.3
ip address add 50.0.0.1/24 brd + dev sa.4

ip address add 10.0.0.2/24 brd + dev sb.2
ip address add 40.0.0.2/24 brd + dev sb.3

ip address add 20.0.0.3/24 brd + dev sc.2
ip address add 30.0.0.3/24 brd + dev sc.3

ip address add 40.0.0.4/24 brd + dev sd.2
ip address add 20.0.0.4/24 brd + dev sd.3
ip address add 50.0.0.4/24 brd + dev sd.4


echo_bold "Wait for h[1-4] to be running"

sleep 10
echo_bold "-> adding controller to switchA"

ovs-vsctl set Bridge switchA other-config:datapath-id=0000000000000005
ovs-vsctl set-controller switchA tcp:$CONTROLLER_IP:$CONTROLLER_PORT

sleep 10
echo_bold "-> adding controller to switchB"
ovs-vsctl set Bridge switchB other-config:datapath-id=0000000000000006
ovs-vsctl set-controller switchB tcp:$CONTROLLER_IP:$CONTROLLER_PORT

sleep 10
echo_bold "-> adding controller to switchC"
ovs-vsctl set Bridge switchC other-config:datapath-id=0000000000000007
ovs-vsctl set-controller switchC tcp:$CONTROLLER_IP:$CONTROLLER_PORT

sleep 10
echo_bold "-> adding controller to switchD"
ovs-vsctl set Bridge switchD other-config:datapath-id=0000000000000008
ovs-vsctl set-controller switchD tcp:$CONTROLLER_IP:$CONTROLLER_PORT

echo_bold "---"
echo_bold "This test is up and running."
echo_bold "---"

exit 0
